/* tslint:disable */
/* eslint-disable */
/* Code generated by ng-openapi-gen DO NOT EDIT. */

import { HttpClient, HttpContext } from '@angular/common/http';
import { Injectable } from '@angular/core';
import { Observable } from 'rxjs';
import { map } from 'rxjs/operators';

import { BaseService } from '../base-service';
import { ApiConfiguration } from '../api-configuration';
import { StrictHttpResponse } from '../strict-http-response';

import { apiStatistiqueAdminGet } from '../fn/statistique/api-statistique-admin-get';
import { ApiStatistiqueAdminGet$Params } from '../fn/statistique/api-statistique-admin-get';
import { apiStatistiqueEtudiantEtudiantIdGet } from '../fn/statistique/api-statistique-etudiant-etudiant-id-get';
import { ApiStatistiqueEtudiantEtudiantIdGet$Params } from '../fn/statistique/api-statistique-etudiant-etudiant-id-get';
import { apiStatistiqueEvolutionGet } from '../fn/statistique/api-statistique-evolution-get';
import { ApiStatistiqueEvolutionGet$Params } from '../fn/statistique/api-statistique-evolution-get';
import { apiStatistiqueFormateurFormateurIdGet } from '../fn/statistique/api-statistique-formateur-formateur-id-get';
import { ApiStatistiqueFormateurFormateurIdGet$Params } from '../fn/statistique/api-statistique-formateur-formateur-id-get';
import { apiStatistiqueGlobalesGet } from '../fn/statistique/api-statistique-globales-get';
import { ApiStatistiqueGlobalesGet$Params } from '../fn/statistique/api-statistique-globales-get';
import { apiStatistiquePeriodesGet } from '../fn/statistique/api-statistique-periodes-get';
import { ApiStatistiquePeriodesGet$Params } from '../fn/statistique/api-statistique-periodes-get';
import { apiStatistiqueSpecialitesGet } from '../fn/statistique/api-statistique-specialites-get';
import { ApiStatistiqueSpecialitesGet$Params } from '../fn/statistique/api-statistique-specialites-get';
import { StatistiqueAdminViewModel } from '../models/statistique-admin-view-model';
import { StatistiqueEtudiantViewModel } from '../models/statistique-etudiant-view-model';
import { StatistiqueEvolutionViewModel } from '../models/statistique-evolution-view-model';
import { StatistiqueFormateurViewModel } from '../models/statistique-formateur-view-model';
import { StatistiqueFormationParPeriode } from '../models/statistique-formation-par-periode';
import { StatistiqueFormationParSpecialite } from '../models/statistique-formation-par-specialite';
import { StatistiqueGlobaleViewModel } from '../models/statistique-globale-view-model';

@Injectable({ providedIn: 'root' })
export class StatistiqueService extends BaseService {
  constructor(config: ApiConfiguration, http: HttpClient) {
    super(config, http);
  }

  /** Path part for operation `apiStatistiqueAdminGet()` */
  static readonly ApiStatistiqueAdminGetPath = '/api/Statistique/admin';

  /**
   * This method provides access to the full `HttpResponse`, allowing access to response headers.
   * To access only the response body, use `apiStatistiqueAdminGet()` instead.
   *
   * This method doesn't expect any request body.
   */
  apiStatistiqueAdminGet$Response(params?: ApiStatistiqueAdminGet$Params, context?: HttpContext): Observable<StrictHttpResponse<StatistiqueAdminViewModel>> {
    return apiStatistiqueAdminGet(this.http, this.rootUrl, params, context);
  }

  /**
   * This method provides access only to the response body.
   * To access the full response (for headers, for example), `apiStatistiqueAdminGet$Response()` instead.
   *
   * This method doesn't expect any request body.
   */
  apiStatistiqueAdminGet(params?: ApiStatistiqueAdminGet$Params, context?: HttpContext): Observable<StatistiqueAdminViewModel> {
    return this.apiStatistiqueAdminGet$Response(params, context).pipe(
      map((r: StrictHttpResponse<StatistiqueAdminViewModel>): StatistiqueAdminViewModel => r.body)
    );
  }

  /** Path part for operation `apiStatistiqueFormateurFormateurIdGet()` */
  static readonly ApiStatistiqueFormateurFormateurIdGetPath = '/api/Statistique/formateur/{formateurId}';

  /**
   * This method provides access to the full `HttpResponse`, allowing access to response headers.
   * To access only the response body, use `apiStatistiqueFormateurFormateurIdGet()` instead.
   *
   * This method doesn't expect any request body.
   */
  apiStatistiqueFormateurFormateurIdGet$Response(params: ApiStatistiqueFormateurFormateurIdGet$Params, context?: HttpContext): Observable<StrictHttpResponse<StatistiqueFormateurViewModel>> {
    return apiStatistiqueFormateurFormateurIdGet(this.http, this.rootUrl, params, context);
  }

  /**
   * This method provides access only to the response body.
   * To access the full response (for headers, for example), `apiStatistiqueFormateurFormateurIdGet$Response()` instead.
   *
   * This method doesn't expect any request body.
   */
  apiStatistiqueFormateurFormateurIdGet(params: ApiStatistiqueFormateurFormateurIdGet$Params, context?: HttpContext): Observable<StatistiqueFormateurViewModel> {
    return this.apiStatistiqueFormateurFormateurIdGet$Response(params, context).pipe(
      map((r: StrictHttpResponse<StatistiqueFormateurViewModel>): StatistiqueFormateurViewModel => r.body)
    );
  }

  /** Path part for operation `apiStatistiqueEtudiantEtudiantIdGet()` */
  static readonly ApiStatistiqueEtudiantEtudiantIdGetPath = '/api/Statistique/etudiant/{etudiantId}';

  /**
   * This method provides access to the full `HttpResponse`, allowing access to response headers.
   * To access only the response body, use `apiStatistiqueEtudiantEtudiantIdGet()` instead.
   *
   * This method doesn't expect any request body.
   */
  apiStatistiqueEtudiantEtudiantIdGet$Response(params: ApiStatistiqueEtudiantEtudiantIdGet$Params, context?: HttpContext): Observable<StrictHttpResponse<StatistiqueEtudiantViewModel>> {
    return apiStatistiqueEtudiantEtudiantIdGet(this.http, this.rootUrl, params, context);
  }

  /**
   * This method provides access only to the response body.
   * To access the full response (for headers, for example), `apiStatistiqueEtudiantEtudiantIdGet$Response()` instead.
   *
   * This method doesn't expect any request body.
   */
  apiStatistiqueEtudiantEtudiantIdGet(params: ApiStatistiqueEtudiantEtudiantIdGet$Params, context?: HttpContext): Observable<StatistiqueEtudiantViewModel> {
    return this.apiStatistiqueEtudiantEtudiantIdGet$Response(params, context).pipe(
      map((r: StrictHttpResponse<StatistiqueEtudiantViewModel>): StatistiqueEtudiantViewModel => r.body)
    );
  }

  /** Path part for operation `apiStatistiqueGlobalesGet()` */
  static readonly ApiStatistiqueGlobalesGetPath = '/api/Statistique/globales';

  /**
   * This method provides access to the full `HttpResponse`, allowing access to response headers.
   * To access only the response body, use `apiStatistiqueGlobalesGet()` instead.
   *
   * This method doesn't expect any request body.
   */
  apiStatistiqueGlobalesGet$Response(params?: ApiStatistiqueGlobalesGet$Params, context?: HttpContext): Observable<StrictHttpResponse<StatistiqueGlobaleViewModel>> {
    return apiStatistiqueGlobalesGet(this.http, this.rootUrl, params, context);
  }

  /**
   * This method provides access only to the response body.
   * To access the full response (for headers, for example), `apiStatistiqueGlobalesGet$Response()` instead.
   *
   * This method doesn't expect any request body.
   */
  apiStatistiqueGlobalesGet(params?: ApiStatistiqueGlobalesGet$Params, context?: HttpContext): Observable<StatistiqueGlobaleViewModel> {
    return this.apiStatistiqueGlobalesGet$Response(params, context).pipe(
      map((r: StrictHttpResponse<StatistiqueGlobaleViewModel>): StatistiqueGlobaleViewModel => r.body)
    );
  }

  /** Path part for operation `apiStatistiqueEvolutionGet()` */
  static readonly ApiStatistiqueEvolutionGetPath = '/api/Statistique/evolution';

  /**
   * This method provides access to the full `HttpResponse`, allowing access to response headers.
   * To access only the response body, use `apiStatistiqueEvolutionGet()` instead.
   *
   * This method doesn't expect any request body.
   */
  apiStatistiqueEvolutionGet$Response(params?: ApiStatistiqueEvolutionGet$Params, context?: HttpContext): Observable<StrictHttpResponse<StatistiqueEvolutionViewModel>> {
    return apiStatistiqueEvolutionGet(this.http, this.rootUrl, params, context);
  }

  /**
   * This method provides access only to the response body.
   * To access the full response (for headers, for example), `apiStatistiqueEvolutionGet$Response()` instead.
   *
   * This method doesn't expect any request body.
   */
  apiStatistiqueEvolutionGet(params?: ApiStatistiqueEvolutionGet$Params, context?: HttpContext): Observable<StatistiqueEvolutionViewModel> {
    return this.apiStatistiqueEvolutionGet$Response(params, context).pipe(
      map((r: StrictHttpResponse<StatistiqueEvolutionViewModel>): StatistiqueEvolutionViewModel => r.body)
    );
  }

  /** Path part for operation `apiStatistiqueSpecialitesGet()` */
  static readonly ApiStatistiqueSpecialitesGetPath = '/api/Statistique/specialites';

  /**
   * This method provides access to the full `HttpResponse`, allowing access to response headers.
   * To access only the response body, use `apiStatistiqueSpecialitesGet()` instead.
   *
   * This method doesn't expect any request body.
   */
  apiStatistiqueSpecialitesGet$Response(params?: ApiStatistiqueSpecialitesGet$Params, context?: HttpContext): Observable<StrictHttpResponse<Array<StatistiqueFormationParSpecialite>>> {
    return apiStatistiqueSpecialitesGet(this.http, this.rootUrl, params, context);
  }

  /**
   * This method provides access only to the response body.
   * To access the full response (for headers, for example), `apiStatistiqueSpecialitesGet$Response()` instead.
   *
   * This method doesn't expect any request body.
   */
  apiStatistiqueSpecialitesGet(params?: ApiStatistiqueSpecialitesGet$Params, context?: HttpContext): Observable<Array<StatistiqueFormationParSpecialite>> {
    return this.apiStatistiqueSpecialitesGet$Response(params, context).pipe(
      map((r: StrictHttpResponse<Array<StatistiqueFormationParSpecialite>>): Array<StatistiqueFormationParSpecialite> => r.body)
    );
  }

  /** Path part for operation `apiStatistiquePeriodesGet()` */
  static readonly ApiStatistiquePeriodesGetPath = '/api/Statistique/periodes';

  /**
   * This method provides access to the full `HttpResponse`, allowing access to response headers.
   * To access only the response body, use `apiStatistiquePeriodesGet()` instead.
   *
   * This method doesn't expect any request body.
   */
  apiStatistiquePeriodesGet$Response(params?: ApiStatistiquePeriodesGet$Params, context?: HttpContext): Observable<StrictHttpResponse<Array<StatistiqueFormationParPeriode>>> {
    return apiStatistiquePeriodesGet(this.http, this.rootUrl, params, context);
  }

  /**
   * This method provides access only to the response body.
   * To access the full response (for headers, for example), `apiStatistiquePeriodesGet$Response()` instead.
   *
   * This method doesn't expect any request body.
   */
  apiStatistiquePeriodesGet(params?: ApiStatistiquePeriodesGet$Params, context?: HttpContext): Observable<Array<StatistiqueFormationParPeriode>> {
    return this.apiStatistiquePeriodesGet$Response(params, context).pipe(
      map((r: StrictHttpResponse<Array<StatistiqueFormationParPeriode>>): Array<StatistiqueFormationParPeriode> => r.body)
    );
  }

}
