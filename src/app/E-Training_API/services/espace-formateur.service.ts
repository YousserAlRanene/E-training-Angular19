/* tslint:disable */
/* eslint-disable */
/* Code generated by ng-openapi-gen DO NOT EDIT. */

import { HttpClient, HttpContext } from '@angular/common/http';
import { Injectable } from '@angular/core';
import { Observable } from 'rxjs';
import { map } from 'rxjs/operators';

import { BaseService } from '../base-service';
import { ApiConfiguration } from '../api-configuration';
import { StrictHttpResponse } from '../strict-http-response';

import { apiEspaceFormateurDashboardGet } from '../fn/espace-formateur/api-espace-formateur-dashboard-get';
import { ApiEspaceFormateurDashboardGet$Params } from '../fn/espace-formateur/api-espace-formateur-dashboard-get';
import { apiEspaceFormateurFormationsFormationIdEtudiantsGet } from '../fn/espace-formateur/api-espace-formateur-formations-formation-id-etudiants-get';
import { ApiEspaceFormateurFormationsFormationIdEtudiantsGet$Params } from '../fn/espace-formateur/api-espace-formateur-formations-formation-id-etudiants-get';
import { apiEspaceFormateurFormationsFormationIdGet } from '../fn/espace-formateur/api-espace-formateur-formations-formation-id-get';
import { ApiEspaceFormateurFormationsFormationIdGet$Params } from '../fn/espace-formateur/api-espace-formateur-formations-formation-id-get';
import { EtudiantInscritViewModel } from '../models/etudiant-inscrit-view-model';
import { FormateurEspaceViewModel } from '../models/formateur-espace-view-model';
import { FormationDetailViewModel } from '../models/formation-detail-view-model';

@Injectable({ providedIn: 'root' })
export class EspaceFormateurService extends BaseService {
  constructor(config: ApiConfiguration, http: HttpClient) {
    super(config, http);
  }

  /** Path part for operation `apiEspaceFormateurDashboardGet()` */
  static readonly ApiEspaceFormateurDashboardGetPath = '/api/EspaceFormateur/dashboard';

  /**
   * This method provides access to the full `HttpResponse`, allowing access to response headers.
   * To access only the response body, use `apiEspaceFormateurDashboardGet()` instead.
   *
   * This method doesn't expect any request body.
   */
  apiEspaceFormateurDashboardGet$Response(params?: ApiEspaceFormateurDashboardGet$Params, context?: HttpContext): Observable<StrictHttpResponse<FormateurEspaceViewModel>> {
    return apiEspaceFormateurDashboardGet(this.http, this.rootUrl, params, context);
  }

  /**
   * This method provides access only to the response body.
   * To access the full response (for headers, for example), `apiEspaceFormateurDashboardGet$Response()` instead.
   *
   * This method doesn't expect any request body.
   */
  apiEspaceFormateurDashboardGet(params?: ApiEspaceFormateurDashboardGet$Params, context?: HttpContext): Observable<FormateurEspaceViewModel> {
    return this.apiEspaceFormateurDashboardGet$Response(params, context).pipe(
      map((r: StrictHttpResponse<FormateurEspaceViewModel>): FormateurEspaceViewModel => r.body)
    );
  }

  /** Path part for operation `apiEspaceFormateurFormationsFormationIdGet()` */
  static readonly ApiEspaceFormateurFormationsFormationIdGetPath = '/api/EspaceFormateur/formations/{formationId}';

  /**
   * This method provides access to the full `HttpResponse`, allowing access to response headers.
   * To access only the response body, use `apiEspaceFormateurFormationsFormationIdGet()` instead.
   *
   * This method doesn't expect any request body.
   */
  apiEspaceFormateurFormationsFormationIdGet$Response(params: ApiEspaceFormateurFormationsFormationIdGet$Params, context?: HttpContext): Observable<StrictHttpResponse<FormationDetailViewModel>> {
    return apiEspaceFormateurFormationsFormationIdGet(this.http, this.rootUrl, params, context);
  }

  /**
   * This method provides access only to the response body.
   * To access the full response (for headers, for example), `apiEspaceFormateurFormationsFormationIdGet$Response()` instead.
   *
   * This method doesn't expect any request body.
   */
  apiEspaceFormateurFormationsFormationIdGet(params: ApiEspaceFormateurFormationsFormationIdGet$Params, context?: HttpContext): Observable<FormationDetailViewModel> {
    return this.apiEspaceFormateurFormationsFormationIdGet$Response(params, context).pipe(
      map((r: StrictHttpResponse<FormationDetailViewModel>): FormationDetailViewModel => r.body)
    );
  }

  /** Path part for operation `apiEspaceFormateurFormationsFormationIdEtudiantsGet()` */
  static readonly ApiEspaceFormateurFormationsFormationIdEtudiantsGetPath = '/api/EspaceFormateur/formations/{formationId}/etudiants';

  /**
   * This method provides access to the full `HttpResponse`, allowing access to response headers.
   * To access only the response body, use `apiEspaceFormateurFormationsFormationIdEtudiantsGet()` instead.
   *
   * This method doesn't expect any request body.
   */
  apiEspaceFormateurFormationsFormationIdEtudiantsGet$Response(params: ApiEspaceFormateurFormationsFormationIdEtudiantsGet$Params, context?: HttpContext): Observable<StrictHttpResponse<Array<EtudiantInscritViewModel>>> {
    return apiEspaceFormateurFormationsFormationIdEtudiantsGet(this.http, this.rootUrl, params, context);
  }

  /**
   * This method provides access only to the response body.
   * To access the full response (for headers, for example), `apiEspaceFormateurFormationsFormationIdEtudiantsGet$Response()` instead.
   *
   * This method doesn't expect any request body.
   */
  apiEspaceFormateurFormationsFormationIdEtudiantsGet(params: ApiEspaceFormateurFormationsFormationIdEtudiantsGet$Params, context?: HttpContext): Observable<Array<EtudiantInscritViewModel>> {
    return this.apiEspaceFormateurFormationsFormationIdEtudiantsGet$Response(params, context).pipe(
      map((r: StrictHttpResponse<Array<EtudiantInscritViewModel>>): Array<EtudiantInscritViewModel> => r.body)
    );
  }

}
